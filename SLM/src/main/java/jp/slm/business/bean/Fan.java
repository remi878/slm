package jp.slm.business.bean;

// Generated 22 janv. 2014 15:00:53 by Hibernate Tools 3.4.0.CR1

import java.util.Collection;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import jp.slm.business.bean.generic.GenericLongIdBean;

/**
 * Fan generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "fan")
public class Fan extends GenericLongIdBean implements UserDetails
{

    private User user;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user", nullable = false)
    public User getUser()
    {
        return this.user;
    }

    public void setUser(User user)
    {
        this.user = user;
    }


    @Transient
    @Override
    public Collection<GrantedAuthority> getAuthorities()
    {
        Collection<GrantedAuthority> roles = user.getAuthorities();
        roles.add(User.FAN_ROLE);
        return roles;
    }

    @Transient
    @Override
    public String getPassword()
    {
        return user.getPassword();
    }

    @Transient
    @Override
    public String getUsername()
    {
        return user.getUsername();
    }

    @Transient
    @Override
    public boolean isAccountNonExpired()
    {
        return user.isAccountNonExpired();
    }

    @Transient
    @Override
    public boolean isAccountNonLocked()
    {
        return user.isAccountNonLocked();
    }

    @Transient
    @Override
    public boolean isCredentialsNonExpired()
    {
        return user.isAccountNonExpired();
    }

    @Transient
    @Override
    public boolean isEnabled()
    {
        return user.isEnabled();
    }
}
